# Generated by Django 3.2.25 on 2024-07-17 04:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Alignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Analysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, null=True)),
                ('description', models.CharField(max_length=100, null=True)),
                ('type', models.CharField(choices=[('ALIGNMENT', 'Alignment'), ('HOMOLOGY', 'Homology')], default='ALIGNMENT', max_length=9)),
                ('status', models.CharField(choices=[('STARTED', 'Started'), ('FAILED', 'Failed'), ('FINISHED', 'Finished')], default='STARTED', max_length=14)),
            ],
        ),
        migrations.CreateModel(
            name='BiopythonBioAlignPairwiseAlignerInput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode', models.CharField(choices=[('global', 'Global'), ('local', 'Local')], default='local', max_length=6)),
                ('match_score', models.IntegerField(default=2)),
                ('mismatch_score', models.IntegerField(default=-1)),
                ('open_gap_score', models.IntegerField(default=-2)),
                ('extend_gap_score', models.IntegerField(default=-1)),
                ('analysis', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='biopython_bio_align_pairwise_aligner_input', to='core.analysis')),
            ],
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=None, max_length=20)),
                ('description', models.CharField(default=None, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='BioPython', max_length=20, unique=True)),
                ('description', models.CharField(default=None, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100, null=True)),
                ('password', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Taxonomy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, null=True)),
                ('description', models.CharField(max_length=100000, null=True)),
                ('analysis', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='taxonomies', to='core.analysis')),
            ],
        ),
        migrations.CreateModel(
            name='BiopythonBioAlignPairwiseAlignerOutput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(null=True)),
                ('target', models.CharField(max_length=100000, null=True)),
                ('query', models.CharField(max_length=100000, null=True)),
                ('aligned', models.CharField(max_length=1000, null=True)),
                ('shape', models.CharField(max_length=10, null=True)),
                ('input', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='outputs', to='core.biopythonbioalignpairwisealignerinput')),
            ],
        ),
        migrations.CreateModel(
            name='BiologicalSequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bases', models.CharField(max_length=100000, null=True)),
                ('country_origin', models.CharField(max_length=100, null=True)),
                ('external_database_id', models.CharField(max_length=100, null=True)),
                ('type', models.CharField(choices=[('DNA', 'DNA'), ('GAPPED_DNA', 'Gapped DNA'), ('RNA', 'RNA'), ('GAPPED_RNA', 'Gapped RNA'), ('PROTEIN', 'PROTEIN'), ('GAPPED_PROTEIN', 'Gapped Protein')], default='DNA', max_length=14)),
                ('alignment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='biological_sequences', to='core.alignment')),
            ],
        ),
        migrations.AddField(
            model_name='analysis',
            name='experiment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='analyses', to='core.experiment'),
        ),
        migrations.AddField(
            model_name='analysis',
            name='generated_from_analysis',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='generated_analysis', to='core.analysis'),
        ),
        migrations.AddField(
            model_name='analysis',
            name='tool',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='analyses', to='core.tool'),
        ),
        migrations.AddField(
            model_name='alignment',
            name='analysis',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='alignments', to='core.analysis'),
        ),
        migrations.AddField(
            model_name='alignment',
            name='taxonomy',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='alignments', to='core.taxonomy'),
        ),
    ]
